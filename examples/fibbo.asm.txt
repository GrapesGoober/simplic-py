// **********************************************************************
// begin with setting some init values 
//

// use r5 as end loop point, as loop from 2 until 47
insert r5 47

// use r6 as loop counter
insert r6 2

// want this loop to increment by 1
insert buffer 1

// set loop point to return progc back here
insert address 6 

// fibbonacically add r1 r2, start counting at 0 and 1
insert r1 0
insert r2 1



// **********************************************************************
// let's start adding numbers
//

// reset flag from previous loop comparison
xor zero zero zero

// add values fibbonacically
add r3 r1 r2

// set these two values as the result for next iteration
move r1 r2 always
move r2 r3 always

// increment loop counter
add r6 r6 buffer



// **********************************************************************
// looping the prog counter back
//

// turn flag on for looping comparison
nor zero zero zero

// set flag = r5 - r6, i.e. trying to do unsigned comparison
sub zero r5 r6

// loop back again if unsigned-higher (r5 > r6)
move progc address uhigher



// **********************************************************************
// finished
//

// write value at location 0
store r3 zero 0